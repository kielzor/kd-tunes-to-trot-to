// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkoutContainer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WorkoutContainer
    addWorkout={[Function]}
    customFile={Array []}
    jogFile={Array []}
    saveWorkout={[Function]}
    sprintFile={Array []}
    warmupFile={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ReactPlayer
          className="player"
          config={
                    Object {
                              "dailymotion": Object {
                                "params": Object {
                                  "api": 1,
                                  "endscreen-enable": false,
                                },
                                "preload": false,
                              },
                              "facebook": Object {
                                "appId": "1309697205772819",
                              },
                              "file": Object {
                                "attributes": Object {},
                                "forceAudio": false,
                                "forceDASH": false,
                                "forceHLS": false,
                                "forceVideo": false,
                                "hlsOptions": Object {},
                                "tracks": Array [],
                              },
                              "mixcloud": Object {
                                "options": Object {
                                  "hide_cover": 1,
                                },
                              },
                              "soundcloud": Object {
                                "options": Object {
                                  "buying": false,
                                  "download": false,
                                  "liking": false,
                                  "sharing": false,
                                  "show_comments": false,
                                  "show_playcount": false,
                                  "visual": true,
                                },
                              },
                              "twitch": Object {
                                "options": Object {},
                              },
                              "vimeo": Object {
                                "playerOptions": Object {
                                  "autopause": false,
                                  "byline": false,
                                  "portrait": false,
                                  "title": false,
                                },
                                "preload": false,
                              },
                              "wistia": Object {
                                "options": Object {},
                              },
                              "youtube": Object {
                                "playerVars": Object {
                                  "iv_load_policy": 3,
                                  "modestbranding": 1,
                                  "playsinline": 1,
                                  "rel": 0,
                                  "showinfo": 0,
                                },
                                "preload": false,
                              },
                            }
          }
          controls={true}
          height="50px"
          loop={false}
          muted={false}
          onBuffer={[Function]}
          onDuration={[Function]}
          onEnded={[Function]}
          onError={[Function]}
          onPause={[Function]}
          onPlay={[Function]}
          onProgress={[Function]}
          onReady={[Function]}
          onSeek={[Function]}
          onStart={[Function]}
          playbackRate={1}
          playing={true}
          playsinline={false}
          progressInterval={1000}
          style={Object {}}
          url=""
          volume={null}
          width="640px"
          wrapper="div"
/>,
        <h3>
          CREATE NEW WORKOUT
</h3>,
        <div
          className="workout-name"
>
          <p>
                    Name
          </p>
          <input
                    className="workout-inputs"
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    value=""
          />
          <p>
                    Workout Length
          </p>
          <select
                    className="workout-inputs"
                    name="totalLength"
                    onChange={[Function]}
                    value={0}
          >
                    <option
                              selected="selected"
                    >
                              Length
                    </option>
                    <option>
                              1:00:00
                    </option>
                    <option>
                              1:30:00
                    </option>
                    <option>
                              2:00:00
                    </option>
          </select>
</div>,
        <div
          className="speed-container"
>
          <h3>
                    Set Warmup/ Cooldown Song
          </h3>
</div>,
        <div
          className="new-workout-jog"
>
          <div
                    className="new-jog-sample"
          >
                    <select
                              className="sample-select"
                              name="warmup"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option>
                                        Choose Sample
                              </option>
                    </select>
          </div>
          <p>
                    OR
          </p>
          <div
                    className="new-jog-custom"
          >
                    <select
                              className="sample-select"
                              name="warmup"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option
                                        default={true}
                              >
                                        Choose Custom
                              </option>
                    </select>
                    <select
                              className="sample-duration"
                              name="warmupLength"
                              onChange={[Function]}
                              value={0}
                    >
                              <option
                                        selected="selected"
                              >
                                        Length
                              </option>
                              <option>
                                        3:00
                              </option>
                              <option>
                                        5:00
                              </option>
                              <option>
                                        10:00
                              </option>
                    </select>
                    <button
                              className="preview-button warmup-preview"
                              onClick={[Function]}
                    >
                              Preview
                    </button>
          </div>
</div>,
        <div
          className="speed-container"
>
          <h3>
                    Set Jog Song
          </h3>
</div>,
        <div
          className="new-workout-jog"
>
          <div
                    className="new-jog-sample"
          >
                    <select
                              className="sample-select"
                              name="jog"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option>
                                        Choose Sample
                              </option>
                    </select>
          </div>
          <p>
                    OR
          </p>
          <div
                    className="new-jog-custom"
          >
                    <select
                              className="sample-select"
                              name="jog"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option
                                        default={true}
                              >
                                        Choose Custom
                              </option>
                    </select>
          </div>
          <select
                    className="sample-duration"
                    name="jogLength"
                    onChange={[Function]}
                    value={0}
          >
                    <option
                              selected="selected"
                    >
                              Length
                    </option>
                    <option>
                              1:00
                    </option>
                    <option>
                              1:30
                    </option>
                    <option>
                              2:00
                    </option>
          </select>
          <button
                    className="preview-button jog-preview"
                    onClick={[Function]}
          >
                    Preview
          </button>
</div>,
        <div
          className="speed-container"
>
          <h3>
                    Set Sprint Song
          </h3>
</div>,
        <div
          className="new-workout-jog"
>
          <div
                    className="new-jog-sample"
          >
                    <select
                              className="sample-select"
                              name="sprint"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option>
                                        Choose Sample
                              </option>
                    </select>
          </div>
          <p>
                    OR
          </p>
          <div
                    className="new-jog-custom"
          >
                    <select
                              className="sample-select"
                              name="sprint"
                              onChange={[Function]}
                              value={Object {}}
                    >
                              <option
                                        default={true}
                              >
                                        Choose Custom
                              </option>
                    </select>
          </div>
          <select
                    className="sample-duration"
                    name="sprintLength"
                    onChange={[Function]}
                    value={0}
          >
                    <option
                              selected="selected"
                    >
                              Length
                    </option>
                    <option>
                              :30
                    </option>
                    <option>
                              :45
                    </option>
                    <option>
                              1:00
                    </option>
          </select>
          <button
                    className="preview-button sprint-preview"
                    onClick={[Function]}
          >
                    Preview
          </button>
</div>,
        <button
          className="save-workout-button"
>
          Save
</button>,
      ],
      "className": "new-workout-container",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "player",
          "config": Object {
            "dailymotion": Object {
              "params": Object {
                "api": 1,
                "endscreen-enable": false,
              },
              "preload": false,
            },
            "facebook": Object {
              "appId": "1309697205772819",
            },
            "file": Object {
              "attributes": Object {},
              "forceAudio": false,
              "forceDASH": false,
              "forceHLS": false,
              "forceVideo": false,
              "hlsOptions": Object {},
              "tracks": Array [],
            },
            "mixcloud": Object {
              "options": Object {
                "hide_cover": 1,
              },
            },
            "soundcloud": Object {
              "options": Object {
                "buying": false,
                "download": false,
                "liking": false,
                "sharing": false,
                "show_comments": false,
                "show_playcount": false,
                "visual": true,
              },
            },
            "twitch": Object {
              "options": Object {},
            },
            "vimeo": Object {
              "playerOptions": Object {
                "autopause": false,
                "byline": false,
                "portrait": false,
                "title": false,
              },
              "preload": false,
            },
            "wistia": Object {
              "options": Object {},
            },
            "youtube": Object {
              "playerVars": Object {
                "iv_load_policy": 3,
                "modestbranding": 1,
                "playsinline": 1,
                "rel": 0,
                "showinfo": 0,
              },
              "preload": false,
            },
          },
          "controls": true,
          "height": "50px",
          "loop": false,
          "muted": false,
          "onBuffer": [Function],
          "onDuration": [Function],
          "onEnded": [Function],
          "onError": [Function],
          "onPause": [Function],
          "onPlay": [Function],
          "onProgress": [Function],
          "onReady": [Function],
          "onSeek": [Function],
          "onStart": [Function],
          "playbackRate": 1,
          "playing": true,
          "playsinline": false,
          "progressInterval": 1000,
          "style": Object {},
          "url": "",
          "volume": null,
          "width": "640px",
          "wrapper": "div",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "CREATE NEW WORKOUT",
        },
        "ref": null,
        "rendered": "CREATE NEW WORKOUT",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Name
</p>,
            <input
              className="workout-inputs"
              name="name"
              onChange={[Function]}
              placeholder="Name"
              value=""
/>,
            <p>
              Workout Length
</p>,
            <select
              className="workout-inputs"
              name="totalLength"
              onChange={[Function]}
              value={0}
>
              <option
                            selected="selected"
              >
                            Length
              </option>
              <option>
                            1:00:00
              </option>
              <option>
                            1:30:00
              </option>
              <option>
                            2:00:00
              </option>
</select>,
          ],
          "className": "workout-name",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name",
            },
            "ref": null,
            "rendered": "Name",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "workout-inputs",
              "name": "name",
              "onChange": [Function],
              "placeholder": "Name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Workout Length",
            },
            "ref": null,
            "rendered": "Workout Length",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  selected="selected"
>
                  Length
</option>,
                <option>
                  1:00:00
</option>,
                <option>
                  1:30:00
</option>,
                <option>
                  2:00:00
</option>,
              ],
              "className": "workout-inputs",
              "name": "totalLength",
              "onChange": [Function],
              "value": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Length",
                  "selected": "selected",
                },
                "ref": null,
                "rendered": "Length",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1:00:00",
                },
                "ref": null,
                "rendered": "1:00:00",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1:30:00",
                },
                "ref": null,
                "rendered": "1:30:00",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "2:00:00",
                },
                "ref": null,
                "rendered": "2:00:00",
                "type": "option",
              },
            ],
            "type": "select",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            Set Warmup/ Cooldown Song
</h3>,
          "className": "speed-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Set Warmup/ Cooldown Song",
          },
          "ref": null,
          "rendered": "Set Warmup/ Cooldown Song",
          "type": "h3",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="new-jog-sample"
>
              <select
                            className="sample-select"
                            name="warmup"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option>
                                          Choose Sample
                            </option>
              </select>
</div>,
            <p>
              OR
</p>,
            <div
              className="new-jog-custom"
>
              <select
                            className="sample-select"
                            name="warmup"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option
                                          default={true}
                            >
                                          Choose Custom
                            </option>
              </select>
              <select
                            className="sample-duration"
                            name="warmupLength"
                            onChange={[Function]}
                            value={0}
              >
                            <option
                                          selected="selected"
                            >
                                          Length
                            </option>
                            <option>
                                          3:00
                            </option>
                            <option>
                                          5:00
                            </option>
                            <option>
                                          10:00
                            </option>
              </select>
              <button
                            className="preview-button warmup-preview"
                            onClick={[Function]}
              >
                            Preview
              </button>
</div>,
          ],
          "className": "new-workout-jog",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="sample-select"
                name="warmup"
                onChange={[Function]}
                value={Object {}}
>
                <option>
                                Choose Sample
                </option>
</select>,
              "className": "new-jog-sample",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    Choose Sample
</option>,
                  Array [],
                ],
                "className": "sample-select",
                "name": "warmup",
                "onChange": [Function],
                "value": Object {},
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Choose Sample",
                  },
                  "ref": null,
                  "rendered": "Choose Sample",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OR",
            },
            "ref": null,
            "rendered": "OR",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <select
                  className="sample-select"
                  name="warmup"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option
                                    default={true}
                  >
                                    Choose Custom
                  </option>
</select>,
                <select
                  className="sample-duration"
                  name="warmupLength"
                  onChange={[Function]}
                  value={0}
>
                  <option
                                    selected="selected"
                  >
                                    Length
                  </option>
                  <option>
                                    3:00
                  </option>
                  <option>
                                    5:00
                  </option>
                  <option>
                                    10:00
                  </option>
</select>,
                <button
                  className="preview-button warmup-preview"
                  onClick={[Function]}
>
                  Preview
</button>,
              ],
              "className": "new-jog-custom",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      default={true}
>
                      Choose Custom
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "warmup",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Custom",
                      "default": true,
                    },
                    "ref": null,
                    "rendered": "Choose Custom",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      selected="selected"
>
                      Length
</option>,
                    <option>
                      3:00
</option>,
                    <option>
                      5:00
</option>,
                    <option>
                      10:00
</option>,
                  ],
                  "className": "sample-duration",
                  "name": "warmupLength",
                  "onChange": [Function],
                  "value": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Length",
                      "selected": "selected",
                    },
                    "ref": null,
                    "rendered": "Length",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "3:00",
                    },
                    "ref": null,
                    "rendered": "3:00",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "5:00",
                    },
                    "ref": null,
                    "rendered": "5:00",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "10:00",
                    },
                    "ref": null,
                    "rendered": "10:00",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Preview",
                  "className": "preview-button warmup-preview",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Preview",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            Set Jog Song
</h3>,
          "className": "speed-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Set Jog Song",
          },
          "ref": null,
          "rendered": "Set Jog Song",
          "type": "h3",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="new-jog-sample"
>
              <select
                            className="sample-select"
                            name="jog"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option>
                                          Choose Sample
                            </option>
              </select>
</div>,
            <p>
              OR
</p>,
            <div
              className="new-jog-custom"
>
              <select
                            className="sample-select"
                            name="jog"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option
                                          default={true}
                            >
                                          Choose Custom
                            </option>
              </select>
</div>,
            <select
              className="sample-duration"
              name="jogLength"
              onChange={[Function]}
              value={0}
>
              <option
                            selected="selected"
              >
                            Length
              </option>
              <option>
                            1:00
              </option>
              <option>
                            1:30
              </option>
              <option>
                            2:00
              </option>
</select>,
            <button
              className="preview-button jog-preview"
              onClick={[Function]}
>
              Preview
</button>,
          ],
          "className": "new-workout-jog",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="sample-select"
                name="jog"
                onChange={[Function]}
                value={Object {}}
>
                <option>
                                Choose Sample
                </option>
</select>,
              "className": "new-jog-sample",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    Choose Sample
</option>,
                  Array [],
                ],
                "className": "sample-select",
                "name": "jog",
                "onChange": [Function],
                "value": Object {},
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Choose Sample",
                  },
                  "ref": null,
                  "rendered": "Choose Sample",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OR",
            },
            "ref": null,
            "rendered": "OR",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="sample-select"
                name="jog"
                onChange={[Function]}
                value={Object {}}
>
                <option
                                default={true}
                >
                                Choose Custom
                </option>
</select>,
              "className": "new-jog-custom",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    default={true}
>
                    Choose Custom
</option>,
                  Array [],
                ],
                "className": "sample-select",
                "name": "jog",
                "onChange": [Function],
                "value": Object {},
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Choose Custom",
                    "default": true,
                  },
                  "ref": null,
                  "rendered": "Choose Custom",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  selected="selected"
>
                  Length
</option>,
                <option>
                  1:00
</option>,
                <option>
                  1:30
</option>,
                <option>
                  2:00
</option>,
              ],
              "className": "sample-duration",
              "name": "jogLength",
              "onChange": [Function],
              "value": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Length",
                  "selected": "selected",
                },
                "ref": null,
                "rendered": "Length",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1:00",
                },
                "ref": null,
                "rendered": "1:00",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1:30",
                },
                "ref": null,
                "rendered": "1:30",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "2:00",
                },
                "ref": null,
                "rendered": "2:00",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Preview",
              "className": "preview-button jog-preview",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Preview",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            Set Sprint Song
</h3>,
          "className": "speed-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Set Sprint Song",
          },
          "ref": null,
          "rendered": "Set Sprint Song",
          "type": "h3",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="new-jog-sample"
>
              <select
                            className="sample-select"
                            name="sprint"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option>
                                          Choose Sample
                            </option>
              </select>
</div>,
            <p>
              OR
</p>,
            <div
              className="new-jog-custom"
>
              <select
                            className="sample-select"
                            name="sprint"
                            onChange={[Function]}
                            value={Object {}}
              >
                            <option
                                          default={true}
                            >
                                          Choose Custom
                            </option>
              </select>
</div>,
            <select
              className="sample-duration"
              name="sprintLength"
              onChange={[Function]}
              value={0}
>
              <option
                            selected="selected"
              >
                            Length
              </option>
              <option>
                            :30
              </option>
              <option>
                            :45
              </option>
              <option>
                            1:00
              </option>
</select>,
            <button
              className="preview-button sprint-preview"
              onClick={[Function]}
>
              Preview
</button>,
          ],
          "className": "new-workout-jog",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="sample-select"
                name="sprint"
                onChange={[Function]}
                value={Object {}}
>
                <option>
                                Choose Sample
                </option>
</select>,
              "className": "new-jog-sample",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    Choose Sample
</option>,
                  Array [],
                ],
                "className": "sample-select",
                "name": "sprint",
                "onChange": [Function],
                "value": Object {},
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Choose Sample",
                  },
                  "ref": null,
                  "rendered": "Choose Sample",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OR",
            },
            "ref": null,
            "rendered": "OR",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="sample-select"
                name="sprint"
                onChange={[Function]}
                value={Object {}}
>
                <option
                                default={true}
                >
                                Choose Custom
                </option>
</select>,
              "className": "new-jog-custom",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    default={true}
>
                    Choose Custom
</option>,
                  Array [],
                ],
                "className": "sample-select",
                "name": "sprint",
                "onChange": [Function],
                "value": Object {},
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Choose Custom",
                    "default": true,
                  },
                  "ref": null,
                  "rendered": "Choose Custom",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  selected="selected"
>
                  Length
</option>,
                <option>
                  :30
</option>,
                <option>
                  :45
</option>,
                <option>
                  1:00
</option>,
              ],
              "className": "sample-duration",
              "name": "sprintLength",
              "onChange": [Function],
              "value": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Length",
                  "selected": "selected",
                },
                "ref": null,
                "rendered": "Length",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": ":30",
                },
                "ref": null,
                "rendered": ":30",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": ":45",
                },
                "ref": null,
                "rendered": ":45",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "1:00",
                },
                "ref": null,
                "rendered": "1:00",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Preview",
              "className": "preview-button sprint-preview",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Preview",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Save",
          "className": "save-workout-button",
        },
        "ref": null,
        "rendered": "Save",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ReactPlayer
            className="player"
            config={
                        Object {
                                    "dailymotion": Object {
                                      "params": Object {
                                        "api": 1,
                                        "endscreen-enable": false,
                                      },
                                      "preload": false,
                                    },
                                    "facebook": Object {
                                      "appId": "1309697205772819",
                                    },
                                    "file": Object {
                                      "attributes": Object {},
                                      "forceAudio": false,
                                      "forceDASH": false,
                                      "forceHLS": false,
                                      "forceVideo": false,
                                      "hlsOptions": Object {},
                                      "tracks": Array [],
                                    },
                                    "mixcloud": Object {
                                      "options": Object {
                                        "hide_cover": 1,
                                      },
                                    },
                                    "soundcloud": Object {
                                      "options": Object {
                                        "buying": false,
                                        "download": false,
                                        "liking": false,
                                        "sharing": false,
                                        "show_comments": false,
                                        "show_playcount": false,
                                        "visual": true,
                                      },
                                    },
                                    "twitch": Object {
                                      "options": Object {},
                                    },
                                    "vimeo": Object {
                                      "playerOptions": Object {
                                        "autopause": false,
                                        "byline": false,
                                        "portrait": false,
                                        "title": false,
                                      },
                                      "preload": false,
                                    },
                                    "wistia": Object {
                                      "options": Object {},
                                    },
                                    "youtube": Object {
                                      "playerVars": Object {
                                        "iv_load_policy": 3,
                                        "modestbranding": 1,
                                        "playsinline": 1,
                                        "rel": 0,
                                        "showinfo": 0,
                                      },
                                      "preload": false,
                                    },
                                  }
            }
            controls={true}
            height="50px"
            loop={false}
            muted={false}
            onBuffer={[Function]}
            onDuration={[Function]}
            onEnded={[Function]}
            onError={[Function]}
            onPause={[Function]}
            onPlay={[Function]}
            onProgress={[Function]}
            onReady={[Function]}
            onSeek={[Function]}
            onStart={[Function]}
            playbackRate={1}
            playing={true}
            playsinline={false}
            progressInterval={1000}
            style={Object {}}
            url=""
            volume={null}
            width="640px"
            wrapper="div"
/>,
          <h3>
            CREATE NEW WORKOUT
</h3>,
          <div
            className="workout-name"
>
            <p>
                        Name
            </p>
            <input
                        className="workout-inputs"
                        name="name"
                        onChange={[Function]}
                        placeholder="Name"
                        value=""
            />
            <p>
                        Workout Length
            </p>
            <select
                        className="workout-inputs"
                        name="totalLength"
                        onChange={[Function]}
                        value={0}
            >
                        <option
                                    selected="selected"
                        >
                                    Length
                        </option>
                        <option>
                                    1:00:00
                        </option>
                        <option>
                                    1:30:00
                        </option>
                        <option>
                                    2:00:00
                        </option>
            </select>
</div>,
          <div
            className="speed-container"
>
            <h3>
                        Set Warmup/ Cooldown Song
            </h3>
</div>,
          <div
            className="new-workout-jog"
>
            <div
                        className="new-jog-sample"
            >
                        <select
                                    className="sample-select"
                                    name="warmup"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option>
                                                Choose Sample
                                    </option>
                        </select>
            </div>
            <p>
                        OR
            </p>
            <div
                        className="new-jog-custom"
            >
                        <select
                                    className="sample-select"
                                    name="warmup"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option
                                                default={true}
                                    >
                                                Choose Custom
                                    </option>
                        </select>
                        <select
                                    className="sample-duration"
                                    name="warmupLength"
                                    onChange={[Function]}
                                    value={0}
                        >
                                    <option
                                                selected="selected"
                                    >
                                                Length
                                    </option>
                                    <option>
                                                3:00
                                    </option>
                                    <option>
                                                5:00
                                    </option>
                                    <option>
                                                10:00
                                    </option>
                        </select>
                        <button
                                    className="preview-button warmup-preview"
                                    onClick={[Function]}
                        >
                                    Preview
                        </button>
            </div>
</div>,
          <div
            className="speed-container"
>
            <h3>
                        Set Jog Song
            </h3>
</div>,
          <div
            className="new-workout-jog"
>
            <div
                        className="new-jog-sample"
            >
                        <select
                                    className="sample-select"
                                    name="jog"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option>
                                                Choose Sample
                                    </option>
                        </select>
            </div>
            <p>
                        OR
            </p>
            <div
                        className="new-jog-custom"
            >
                        <select
                                    className="sample-select"
                                    name="jog"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option
                                                default={true}
                                    >
                                                Choose Custom
                                    </option>
                        </select>
            </div>
            <select
                        className="sample-duration"
                        name="jogLength"
                        onChange={[Function]}
                        value={0}
            >
                        <option
                                    selected="selected"
                        >
                                    Length
                        </option>
                        <option>
                                    1:00
                        </option>
                        <option>
                                    1:30
                        </option>
                        <option>
                                    2:00
                        </option>
            </select>
            <button
                        className="preview-button jog-preview"
                        onClick={[Function]}
            >
                        Preview
            </button>
</div>,
          <div
            className="speed-container"
>
            <h3>
                        Set Sprint Song
            </h3>
</div>,
          <div
            className="new-workout-jog"
>
            <div
                        className="new-jog-sample"
            >
                        <select
                                    className="sample-select"
                                    name="sprint"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option>
                                                Choose Sample
                                    </option>
                        </select>
            </div>
            <p>
                        OR
            </p>
            <div
                        className="new-jog-custom"
            >
                        <select
                                    className="sample-select"
                                    name="sprint"
                                    onChange={[Function]}
                                    value={Object {}}
                        >
                                    <option
                                                default={true}
                                    >
                                                Choose Custom
                                    </option>
                        </select>
            </div>
            <select
                        className="sample-duration"
                        name="sprintLength"
                        onChange={[Function]}
                        value={0}
            >
                        <option
                                    selected="selected"
                        >
                                    Length
                        </option>
                        <option>
                                    :30
                        </option>
                        <option>
                                    :45
                        </option>
                        <option>
                                    1:00
                        </option>
            </select>
            <button
                        className="preview-button sprint-preview"
                        onClick={[Function]}
            >
                        Preview
            </button>
</div>,
          <button
            className="save-workout-button"
>
            Save
</button>,
        ],
        "className": "new-workout-container",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "player",
            "config": Object {
              "dailymotion": Object {
                "params": Object {
                  "api": 1,
                  "endscreen-enable": false,
                },
                "preload": false,
              },
              "facebook": Object {
                "appId": "1309697205772819",
              },
              "file": Object {
                "attributes": Object {},
                "forceAudio": false,
                "forceDASH": false,
                "forceHLS": false,
                "forceVideo": false,
                "hlsOptions": Object {},
                "tracks": Array [],
              },
              "mixcloud": Object {
                "options": Object {
                  "hide_cover": 1,
                },
              },
              "soundcloud": Object {
                "options": Object {
                  "buying": false,
                  "download": false,
                  "liking": false,
                  "sharing": false,
                  "show_comments": false,
                  "show_playcount": false,
                  "visual": true,
                },
              },
              "twitch": Object {
                "options": Object {},
              },
              "vimeo": Object {
                "playerOptions": Object {
                  "autopause": false,
                  "byline": false,
                  "portrait": false,
                  "title": false,
                },
                "preload": false,
              },
              "wistia": Object {
                "options": Object {},
              },
              "youtube": Object {
                "playerVars": Object {
                  "iv_load_policy": 3,
                  "modestbranding": 1,
                  "playsinline": 1,
                  "rel": 0,
                  "showinfo": 0,
                },
                "preload": false,
              },
            },
            "controls": true,
            "height": "50px",
            "loop": false,
            "muted": false,
            "onBuffer": [Function],
            "onDuration": [Function],
            "onEnded": [Function],
            "onError": [Function],
            "onPause": [Function],
            "onPlay": [Function],
            "onProgress": [Function],
            "onReady": [Function],
            "onSeek": [Function],
            "onStart": [Function],
            "playbackRate": 1,
            "playing": true,
            "playsinline": false,
            "progressInterval": 1000,
            "style": Object {},
            "url": "",
            "volume": null,
            "width": "640px",
            "wrapper": "div",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "CREATE NEW WORKOUT",
          },
          "ref": null,
          "rendered": "CREATE NEW WORKOUT",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Name
</p>,
              <input
                className="workout-inputs"
                name="name"
                onChange={[Function]}
                placeholder="Name"
                value=""
/>,
              <p>
                Workout Length
</p>,
              <select
                className="workout-inputs"
                name="totalLength"
                onChange={[Function]}
                value={0}
>
                <option
                                selected="selected"
                >
                                Length
                </option>
                <option>
                                1:00:00
                </option>
                <option>
                                1:30:00
                </option>
                <option>
                                2:00:00
                </option>
</select>,
            ],
            "className": "workout-name",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Name",
              },
              "ref": null,
              "rendered": "Name",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "workout-inputs",
                "name": "name",
                "onChange": [Function],
                "placeholder": "Name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Workout Length",
              },
              "ref": null,
              "rendered": "Workout Length",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    selected="selected"
>
                    Length
</option>,
                  <option>
                    1:00:00
</option>,
                  <option>
                    1:30:00
</option>,
                  <option>
                    2:00:00
</option>,
                ],
                "className": "workout-inputs",
                "name": "totalLength",
                "onChange": [Function],
                "value": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Length",
                    "selected": "selected",
                  },
                  "ref": null,
                  "rendered": "Length",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1:00:00",
                  },
                  "ref": null,
                  "rendered": "1:00:00",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1:30:00",
                  },
                  "ref": null,
                  "rendered": "1:30:00",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "2:00:00",
                  },
                  "ref": null,
                  "rendered": "2:00:00",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              Set Warmup/ Cooldown Song
</h3>,
            "className": "speed-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Set Warmup/ Cooldown Song",
            },
            "ref": null,
            "rendered": "Set Warmup/ Cooldown Song",
            "type": "h3",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="new-jog-sample"
>
                <select
                                className="sample-select"
                                name="warmup"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option>
                                                Choose Sample
                                </option>
                </select>
</div>,
              <p>
                OR
</p>,
              <div
                className="new-jog-custom"
>
                <select
                                className="sample-select"
                                name="warmup"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option
                                                default={true}
                                >
                                                Choose Custom
                                </option>
                </select>
                <select
                                className="sample-duration"
                                name="warmupLength"
                                onChange={[Function]}
                                value={0}
                >
                                <option
                                                selected="selected"
                                >
                                                Length
                                </option>
                                <option>
                                                3:00
                                </option>
                                <option>
                                                5:00
                                </option>
                                <option>
                                                10:00
                                </option>
                </select>
                <button
                                className="preview-button warmup-preview"
                                onClick={[Function]}
                >
                                Preview
                </button>
</div>,
            ],
            "className": "new-workout-jog",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="sample-select"
                  name="warmup"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option>
                                    Choose Sample
                  </option>
</select>,
                "className": "new-jog-sample",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Choose Sample
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "warmup",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Sample",
                    },
                    "ref": null,
                    "rendered": "Choose Sample",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "OR",
              },
              "ref": null,
              "rendered": "OR",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <select
                    className="sample-select"
                    name="warmup"
                    onChange={[Function]}
                    value={Object {}}
>
                    <option
                                        default={true}
                    >
                                        Choose Custom
                    </option>
</select>,
                  <select
                    className="sample-duration"
                    name="warmupLength"
                    onChange={[Function]}
                    value={0}
>
                    <option
                                        selected="selected"
                    >
                                        Length
                    </option>
                    <option>
                                        3:00
                    </option>
                    <option>
                                        5:00
                    </option>
                    <option>
                                        10:00
                    </option>
</select>,
                  <button
                    className="preview-button warmup-preview"
                    onClick={[Function]}
>
                    Preview
</button>,
                ],
                "className": "new-jog-custom",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <option
                        default={true}
>
                        Choose Custom
</option>,
                      Array [],
                    ],
                    "className": "sample-select",
                    "name": "warmup",
                    "onChange": [Function],
                    "value": Object {},
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose Custom",
                        "default": true,
                      },
                      "ref": null,
                      "rendered": "Choose Custom",
                      "type": "option",
                    },
                  ],
                  "type": "select",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <option
                        selected="selected"
>
                        Length
</option>,
                      <option>
                        3:00
</option>,
                      <option>
                        5:00
</option>,
                      <option>
                        10:00
</option>,
                    ],
                    "className": "sample-duration",
                    "name": "warmupLength",
                    "onChange": [Function],
                    "value": 0,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Length",
                        "selected": "selected",
                      },
                      "ref": null,
                      "rendered": "Length",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "3:00",
                      },
                      "ref": null,
                      "rendered": "3:00",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "5:00",
                      },
                      "ref": null,
                      "rendered": "5:00",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "10:00",
                      },
                      "ref": null,
                      "rendered": "10:00",
                      "type": "option",
                    },
                  ],
                  "type": "select",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Preview",
                    "className": "preview-button warmup-preview",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Preview",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              Set Jog Song
</h3>,
            "className": "speed-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Set Jog Song",
            },
            "ref": null,
            "rendered": "Set Jog Song",
            "type": "h3",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="new-jog-sample"
>
                <select
                                className="sample-select"
                                name="jog"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option>
                                                Choose Sample
                                </option>
                </select>
</div>,
              <p>
                OR
</p>,
              <div
                className="new-jog-custom"
>
                <select
                                className="sample-select"
                                name="jog"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option
                                                default={true}
                                >
                                                Choose Custom
                                </option>
                </select>
</div>,
              <select
                className="sample-duration"
                name="jogLength"
                onChange={[Function]}
                value={0}
>
                <option
                                selected="selected"
                >
                                Length
                </option>
                <option>
                                1:00
                </option>
                <option>
                                1:30
                </option>
                <option>
                                2:00
                </option>
</select>,
              <button
                className="preview-button jog-preview"
                onClick={[Function]}
>
                Preview
</button>,
            ],
            "className": "new-workout-jog",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="sample-select"
                  name="jog"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option>
                                    Choose Sample
                  </option>
</select>,
                "className": "new-jog-sample",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Choose Sample
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "jog",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Sample",
                    },
                    "ref": null,
                    "rendered": "Choose Sample",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "OR",
              },
              "ref": null,
              "rendered": "OR",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="sample-select"
                  name="jog"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option
                                    default={true}
                  >
                                    Choose Custom
                  </option>
</select>,
                "className": "new-jog-custom",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      default={true}
>
                      Choose Custom
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "jog",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Custom",
                      "default": true,
                    },
                    "ref": null,
                    "rendered": "Choose Custom",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    selected="selected"
>
                    Length
</option>,
                  <option>
                    1:00
</option>,
                  <option>
                    1:30
</option>,
                  <option>
                    2:00
</option>,
                ],
                "className": "sample-duration",
                "name": "jogLength",
                "onChange": [Function],
                "value": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Length",
                    "selected": "selected",
                  },
                  "ref": null,
                  "rendered": "Length",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1:00",
                  },
                  "ref": null,
                  "rendered": "1:00",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1:30",
                  },
                  "ref": null,
                  "rendered": "1:30",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "2:00",
                  },
                  "ref": null,
                  "rendered": "2:00",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Preview",
                "className": "preview-button jog-preview",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Preview",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              Set Sprint Song
</h3>,
            "className": "speed-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Set Sprint Song",
            },
            "ref": null,
            "rendered": "Set Sprint Song",
            "type": "h3",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="new-jog-sample"
>
                <select
                                className="sample-select"
                                name="sprint"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option>
                                                Choose Sample
                                </option>
                </select>
</div>,
              <p>
                OR
</p>,
              <div
                className="new-jog-custom"
>
                <select
                                className="sample-select"
                                name="sprint"
                                onChange={[Function]}
                                value={Object {}}
                >
                                <option
                                                default={true}
                                >
                                                Choose Custom
                                </option>
                </select>
</div>,
              <select
                className="sample-duration"
                name="sprintLength"
                onChange={[Function]}
                value={0}
>
                <option
                                selected="selected"
                >
                                Length
                </option>
                <option>
                                :30
                </option>
                <option>
                                :45
                </option>
                <option>
                                1:00
                </option>
</select>,
              <button
                className="preview-button sprint-preview"
                onClick={[Function]}
>
                Preview
</button>,
            ],
            "className": "new-workout-jog",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="sample-select"
                  name="sprint"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option>
                                    Choose Sample
                  </option>
</select>,
                "className": "new-jog-sample",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Choose Sample
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "sprint",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Sample",
                    },
                    "ref": null,
                    "rendered": "Choose Sample",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "OR",
              },
              "ref": null,
              "rendered": "OR",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  className="sample-select"
                  name="sprint"
                  onChange={[Function]}
                  value={Object {}}
>
                  <option
                                    default={true}
                  >
                                    Choose Custom
                  </option>
</select>,
                "className": "new-jog-custom",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      default={true}
>
                      Choose Custom
</option>,
                    Array [],
                  ],
                  "className": "sample-select",
                  "name": "sprint",
                  "onChange": [Function],
                  "value": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose Custom",
                      "default": true,
                    },
                    "ref": null,
                    "rendered": "Choose Custom",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    selected="selected"
>
                    Length
</option>,
                  <option>
                    :30
</option>,
                  <option>
                    :45
</option>,
                  <option>
                    1:00
</option>,
                ],
                "className": "sample-duration",
                "name": "sprintLength",
                "onChange": [Function],
                "value": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Length",
                    "selected": "selected",
                  },
                  "ref": null,
                  "rendered": "Length",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": ":30",
                  },
                  "ref": null,
                  "rendered": ":30",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": ":45",
                  },
                  "ref": null,
                  "rendered": ":45",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "1:00",
                  },
                  "ref": null,
                  "rendered": "1:00",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Preview",
                "className": "preview-button sprint-preview",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Preview",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Save",
            "className": "save-workout-button",
          },
          "ref": null,
          "rendered": "Save",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
